" Plugins ----------------------------------------------------------------------

" vim-plug config
call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'chiel92/vim-autoformat'
Plug 'chr4/nginx.vim'
Plug 'craigemery/vim-autotag'
Plug 'danro/rename.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'posva/vim-vue'
Plug 'tomasiser/vim-code-dark'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-sleuth'
Plug 'vim-airline/vim-airline'
Plug 'vim-syntastic/syntastic'
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
endif
call plug#end()
let g:gitgutter_enabled = 0
let g:deoplete#enable_at_startup = 1

" clear plugin key mappings
mapclear


" Functions --------------------------------------------------------------------

" fill rest of line with characters
function! SectionComment()
  let str = '-'
  let tw = &textwidth
  if tw==0 | let tw = 80 | endif
  .s/[[:space:]]*$//
  let reps = (tw - col("$")) / len(str)
  if reps > 0
    .s/$/\=(' '.repeat(str, reps))/
  endif
endfunction


" Commands ---------------------------------------------------------------------

" autoload vimrc on change
if has("autocmd")
    autocmd bufwritepost .vimrc,vim.conf source $MYVIMRC
endif


" Options ----------------------------------------------------------------------

" mouse support
set mouse=a

" spacing
filetype plugin indent on
set expandtab
set tabstop=4
set shiftwidth=4

" syntax highlighting
syntax on
let g:syntastic_cpp_compiler = 'clang++'
let g:syntastic_cpp_compiler_options = '-std=c++11 -stdlib=libc++'

" searching
set ignorecase

" ruler
set textwidth=80
let &colorcolumn=&textwidth+1
highlight ColorColumn ctermbg=grey

" colour scheme
set background=dark
silent! colorscheme codedark
highlight Search ctermfg=black ctermbg=grey
set t_Co=256
set t_ut=

" insert cursor ('|' symbol)
let &t_EI = "\e[2 q"
let &t_SI = "\e[6 q"

" menu bars
set display=lastline
set modelines=1

" file handling
set hidden
set nobackup

" wrap
set linebreak
set nocompatible
set noshowmode
set noswapfile
set showmatch
noremap j gj
noremap k gk

" airline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#tabline#buffer_idx_mode = 1

"search
set hlsearch


" Key Bindings -----------------------------------------------------------------

" leader key override
let mapleader="\<tab>"

" clear search highlights
nnoremap <silent> <CR> :nohlsearch<CR><CR>

" file fuzzy finding
nnoremap <C-p> :FZF<CR>

" file management
nnoremap <C-o> :e
nnoremap <C-s> :w<CR>
nnoremap <C-c> :q<CR>
noremap <leader>n :enew<CR>
noremap <leader>w :bd<CR>

" git
noremap <leader>g :GitGutterToggle<CR>

" line numberss
noremap <leader>l :set invnumber<CR>

" paste mode toggle
noremap <leader>p :set pastetoggle<CR>

" auto formatting
noremap <leader>f :Autoformat<CR>

" jump sentences w/o shift
noremap 9 (
noremap 0 )

" commenting
nnoremap <C-_> gcc

" buffers
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9

" splits
noremap <leader>- :split<CR>
noremap <leader><bslash> :vsplit<CR>
noremap <leader>= <C-w><C-q>

" autocomplete
imap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"

" vi:syntax=vim
